apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
import java.util.regex.Matcher
import java.util.regex.Pattern

def getCurrentFlavor() {
    String task = getGradle().getStartParameter().getTaskRequests().toString()
    Matcher matcher = Pattern.compile("(assemble|generate)\\w*(Release|Debug)").matcher(task)
    if (matcher.find()) return matcher.group(2).toLowerCase() else {
        println "Warning: No match found for $task"
        return "debug"
    }
}

android {
    lintOptions {
        abortOnError false
    }

    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    defaultConfig {
        applicationId "io.github.shadowsocksrb.mod"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.sdkVersion
        versionCode rootProject.versionCode
        versionName rootProject.versionName
        resConfigs rootProject.resConfigs
        ndkVersion rootProject.ndkVersion
        resValue 'string', 'applicationId', applicationId
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
//            signingConfig signingConfigs.debug
            signingConfig {
                    storeFile file("../release.jks")
                    keyAlias "releease"
                    storePassword System.getenv("KEYSTORE_PWD")
                    keyPassword System.getenv("KEY_PWD")
                }
            proguardFiles 'r8-rules.pro'
            kotlinOptions {
                freeCompilerArgs = [
                        '-Xno-param-assertions',
                        '-Xno-call-assertions',
                        '-Xno-receiver-assertions',
                        '-Xmultifile-parts-inherit',
                ]
            }
        }
        debug {
            applicationIdSuffix '.debug'
            versionNameSuffix '-debug'
            resValue 'string', 'applicationId', defaultConfig.applicationId + applicationIdSuffix
        }
    }
    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility javaVersion
        targetCompatibility javaVersion
    }
    packagingOptions {
        exclude '/META-INF/*.version'
        exclude '**/*.kotlin_*'
        splits {
            abi {
                enable true
                universalApk true
            }
        }
        sourceSets.main.jniLibs.srcDirs +=
                new File(project(':core').buildDir, "intermediates/bundles/${getCurrentFlavor()}/jni")
        sourceSets.main.jniLibs.srcDirs += new File(project(':core').projectDir, "build/go")

    }
    aaptOptions.additionalParameters "--preferred-density", "xxxhdpi"
    kotlinOptions.jvmTarget = javaVersion
    lintOptions.checkReleaseBuilds false
}

androidExtensions.experimental true

dependencies {
    coreLibraryDesugaring "com.android.tools:desugar_jdk_libs:$desugarLibsVersion"
    implementation project(':core')
    implementation 'androidx.browser:browser:1.3.0-alpha01'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-beta4'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.2.0'
    implementation 'com.google.zxing:core:3.4.0'
    implementation 'com.takisoft.preferencex:preferencex-simplemenu:1.1.0'
    implementation 'com.twofortyfouram:android-plugin-api-for-locale:1.0.4'
    implementation 'me.zhanghai.android.fastscroll:library:1.1.0'
}
